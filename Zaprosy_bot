from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

# Замените на ваш токен
BOT_TOKEN = '7994008160:AAF1YtC2D-XF2m3mGiarL6K30nlSH0WhlMo'

# ID вашего канала
CHANNEL_ID = '@your_channel_username'

# Команда /start
def start(update: Update, context: CallbackContext) -> None:
    update.message.reply_text(
        "Здравствуйте! Я бот фонда. Вы можете отправить нам сообщение, и мы его рассмотрим. "
        "Спасибо за вашу поддержку!"
    )

# Обработка сообщений от пользователей
def handle_message(update: Update, context: CallbackContext) -> None:
    user_message = update.message.text
    user_name = update.message.chat.first_name or "Пользователь"
    user_id = update.message.chat.id

    # Отправляем уведомление администратору
    admin_message = (
        f"Новое обращение:\n"
        f"Имя: {user_name}\n"
        f"ID: {user_id}\n"
        f"Сообщение: {user_message}"
    )
    context.bot.send_message(chat_id=CHANNEL_ID, text=admin_message)

    # Подтверждение пользователю
    update.message.reply_text("Ваше сообщение принято. Мы скоро с вами свяжемся!")

# Отправка сообщения в канал с кнопкой
def send_button_message(update: Update, context: CallbackContext) -> None:
    button = InlineKeyboardButton("Написать сообщение", url=f"https://t.me/{context.bot.username}")
    keyboard = InlineKeyboardMarkup([[button]])

    context.bot.send_message(
        chat_id=CHANNEL_ID,
        text="Хотите задать вопрос или оставить обращение? Напишите нашему боту!",
        reply_markup=keyboard
    )

    update.message.reply_text("Сообщение с кнопкой отправлено в канал. Закрепите его для удобства пользователей.")

def main():
    updater = Updater(BOT_TOKEN)
    dispatcher = updater.dispatcher

    # Обработчики команд
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CommandHandler("send_button", send_button_message))
    dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
